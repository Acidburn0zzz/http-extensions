



HTTP Working Group                                         M. Nottingham
Internet-Draft                                                 E. Nygren
Intended status: Standards Track                                  Akamai
Expires: August 6, 2017                                 February 2, 2017


                        The ORIGIN HTTP/2 Frame
                 draft-ietf-httpbis-origin-frame-latest

Abstract

   This document specifies the ORIGIN frame for HTTP/2, to indicate what
   origins are available on a given connection.

Note to Readers

   Discussion of this draft takes place on the HTTP working group
   mailing list (ietf-http-wg@w3.org), which is archived at
   https://lists.w3.org/Archives/Public/ietf-http-wg/ .

   Working Group information can be found at http://httpwg.github.io/ ;
   source code and issues list for this draft can be found at
   https://github.com/httpwg/http-extensions/labels/origin-frame .

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on August 6, 2017.

Copyright Notice

   Copyright (c) 2017 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents



Nottingham & Nygren      Expires August 6, 2017                 [Page 1]

Internet-Draft                ORIGIN Frames                February 2017


   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Notational Conventions  . . . . . . . . . . . . . . . . .   2
   2.  The ORIGIN HTTP/2 Frame . . . . . . . . . . . . . . . . . . .   3
     2.1.  Syntax  . . . . . . . . . . . . . . . . . . . . . . . . .   3
     2.2.  Processing ORIGIN Frames  . . . . . . . . . . . . . . . .   3
     2.3.  The Origin Set  . . . . . . . . . . . . . . . . . . . . .   4
     2.4.  Authority and Coalescing with ORIGIN  . . . . . . . . . .   5
   3.  Security Considerations . . . . . . . . . . . . . . . . . . .   5
   4.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   5
     4.1.  Normative References  . . . . . . . . . . . . . . . . . .   5
     4.2.  Informative References  . . . . . . . . . . . . . . . . .   6
   Appendix A.  Non-Normative Processing Algoritm  . . . . . . . . .   6
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   7

1.  Introduction

   HTTP/2 [RFC7540] allows clients to coalesce different origins
   [RFC6454] onto the same connection when certain conditions are met.
   However, in certain cases, a connection is is not usable for a
   coalesced origin, so the 421 (Misdirected Request) status code
   ([RFC7540], Section 9.1.2) was defined.

   Using a status code in this manner allows clients to recover from
   misdirected requests, but at the penalty of adding latency.  To
   address that, this specification defines a new HTTP/2 frame type,
   "ORIGIN", to allow servers to indicate what origins a connection is
   usable for.

   Additionally, experience has shown that HTTP/2's requirement to
   establish server authority using both DNS and the server's
   certificate is onerous.  This specification relaxes the requirement
   to check DNS when the ORIGIN frame is in use.

1.1.  Notational Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].



Nottingham & Nygren      Expires August 6, 2017                 [Page 2]

Internet-Draft                ORIGIN Frames                February 2017


2.  The ORIGIN HTTP/2 Frame

   The ORIGIN HTTP/2 frame ([RFC7540], Section 4) allows a server to
   indicate what origin(s) [RFC6454] the server would like the client to
   consider as members of the Origin Set (Section 2.3) for the
   connection it occurs within.

2.1.  Syntax

   The ORIGIN frame type is 0xb (decimal 11).


   +-------------------------------+-------------------------------+
   |         Origin-Len (16)       | ASCII-Origin? (*)           ...
   +-------------------------------+-------------------------------+

   The ORIGIN frame's payload contains the following fields, sets of
   which may be repeated within the frame to indicate multiple origins:

   Origin-Len:  An unsigned, 16-bit integer indicating the length, in
      octets, of the Origin field.

   Origin:  An optional sequence of characters containing the ASCII
      serialization of an origin ([RFC6454], Section 6.2) that the
      sender believes this connection is or could be authoritative for.

   The ORIGIN frame does not define any flags.

2.2.  Processing ORIGIN Frames

   The ORIGIN frame is a non-critical extension to HTTP/2.  Endpoints
   that do not support this frame can safely ignore it upon receipt.

   When received by an implementing client, it is used to manipulate the
   Origin Set (see Section 2.3), thereby changing how the client
   establishes authority for origin servers (see Section 2.4).

   The origin frame MUST be sent on stream 0; an ORIGIN frame on any
   other stream is invalid and MUST be ignored.

   Likewise, the ORIGIN frame is only valid on connections with the "h2"
   protocol identifier, or when specifically nominated by the protocol's
   definition; it MUST be ignored when received on a connection with the
   "h2c" protocol identifier.

   The ORIGIN frame is processed hop-by-hop.  An intermediary MUST NOT
   forward ORIGIN frames.  Clients configured to use a proxy MUST ignore
   any ORIGIN frames received from it.



Nottingham & Nygren      Expires August 6, 2017                 [Page 3]

Internet-Draft                ORIGIN Frames                February 2017


   Each ASCII-Origin field in the frame's payload MUST be parsed as an
   ASCII serialisation of an origin ([RFC6454], Section 6.2).  If
   parsing fails, the field MUST be ignored.

   Senders should note that, as per [RFC6454] Section 4, the values in
   an ORIGIN header need to be case-normalised before serialisation.

   Once parsed, the value MUST have:

   o  a scheme of "https",

   o  a host that is reflected in a "subjectAltName" of the connection's
      TLS certificate (using the wildcard rules defined in [RFC2818],
      Section 3.1), and

   o  a port that reflects the connection's local port on the server.

   If any of these requirements are violated, the client MUST ignore the
   field.

   See Appendix A for an illustrative algorithm for processing ORIGIN
   frames.

2.3.  The Origin Set

   The set of origins (as per [RFC6454]) that a given connection might
   be used for is known in this specification as the Origin Set.

   When an ORIGIN frame is first received by a client, the connection's
   Origin Set is defined to contain a single origin, composed from:

   o  Scheme: "https"

   o  Host: the value sent in Server Name Indication ([RFC6066]
      Section 3), converted to lower case

   o  Port: the local port of the connection on the server

   The contents of that ORIGIN frame (and subsequent ones) allows the
   server to incrementally add new origins to the Origin Set, as
   described in Section 2.2.

   The Origin Set is also affected by the 421 (Misdirected Request)
   response status code, defined in [RFC7540] Section 9.1.2.  Upon
   receipt of a response with this status code, implementing clients
   MUST create the ASCII serialisation of the corresponding request's
   origin (as per [RFC6454], Section 6.2) and remove it from the
   connection's Origin Set, if present.



Nottingham & Nygren      Expires August 6, 2017                 [Page 4]

Internet-Draft                ORIGIN Frames                February 2017


2.4.  Authority and Coalescing with ORIGIN

   [RFC7540], Section 10.1 uses both DNS and the presented TLS
   certificate to establish the origin server(s) that a connection is
   authoritative for, just as HTTP/1.1 does in [RFC7230].  Furthermore,
   [RFC7540] Section 9.1.1 explicitly allows a connection to be used for
   more than one origin server, if it is authoritative.

   Upon receiving an ORIGIN frame on a connection, clients that
   implement this specification change these behaviors in the following
   ways:

   o  They MUST NOT consult DNS to establish authority for origins in
      the Origin Set. The TLS certificate MUST be used to do so, as
      described in [RFC7540] Section 9.1.1.

   o  Requests SHOULD use an existing connection if their origin is in
      that connection's Origin Set, unless there are operational reasons
      for creating a new connection.

3.  Security Considerations

   Clients that blindly trust the ORIGIN frame's contents will be
   vulnerable to a large number of attacks.  See Section 2.4 for
   mitigations.

   Relaxing the requirement to consult DNS when determining authority
   for an origin means that an attacker who possesses a valid
   certificate no longer needs to be on-path to redirect traffic to
   them; instead of modifying DNS, they need only convince the user to
   visit another Web site, in order to coalesce connections to the
   target onto their existing connection.

4.  References

4.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <http://www.rfc-editor.org/info/rfc2119>.

   [RFC2818]  Rescorla, E., "HTTP Over TLS", RFC 2818,
              DOI 10.17487/RFC2818, May 2000,
              <http://www.rfc-editor.org/info/rfc2818>.






Nottingham & Nygren      Expires August 6, 2017                 [Page 5]

Internet-Draft                ORIGIN Frames                February 2017


   [RFC6006]  Zhao, Q., Ed., King, D., Ed., Verhaeghe, F., Takeda, T.,
              Ali, Z., and J. Meuric, "Extensions to the Path
              Computation Element Communication Protocol (PCEP) for
              Point-to-Multipoint Traffic Engineering Label Switched
              Paths", RFC 6006, DOI 10.17487/RFC6006, September 2010,
              <http://www.rfc-editor.org/info/rfc6006>.

   [RFC6066]  Eastlake 3rd, D., "Transport Layer Security (TLS)
              Extensions: Extension Definitions", RFC 6066,
              DOI 10.17487/RFC6066, January 2011,
              <http://www.rfc-editor.org/info/rfc6066>.

   [RFC6454]  Barth, A., "The Web Origin Concept", RFC 6454,
              DOI 10.17487/RFC6454, December 2011,
              <http://www.rfc-editor.org/info/rfc6454>.

   [RFC7540]  Belshe, M., Peon, R., and M. Thomson, Ed., "Hypertext
              Transfer Protocol Version 2 (HTTP/2)", RFC 7540,
              DOI 10.17487/RFC7540, May 2015,
              <http://www.rfc-editor.org/info/rfc7540>.

4.2.  Informative References

   [RFC7230]  Fielding, R., Ed. and J. Reschke, Ed., "Hypertext Transfer
              Protocol (HTTP/1.1): Message Syntax and Routing",
              RFC 7230, DOI 10.17487/RFC7230, June 2014,
              <http://www.rfc-editor.org/info/rfc7230>.

Appendix A.  Non-Normative Processing Algoritm

   The following algorithm illustrates how a client could handle
   received ORIGIN frames:

   1.  If the client is configured to use a proxy for the connection,
       ignore the frame and stop processing.

   2.  If the connection is not running under TLS or does not present
       Server Name Indication (SNI) [RFC6006], ignore the frame and stop
       processing.

   3.  If the frame occurs upon any stream except stream 0, ignore the
       frame and stop processing.

   4.  For each Origin field "origin_raw" in the frame payload:

       1.  Parse "origin_raw" as an ASCII serialization of an origin
           ([RFC6454], Section 6.2) and let the result be




Nottingham & Nygren      Expires August 6, 2017                 [Page 6]

Internet-Draft                ORIGIN Frames                February 2017


           "parsed_origin".  If parsing fails, skip to the next
           "origin_raw".

       2.  If the "scheme" of "parsed_origin" is not "https", skip to
           the next "origin_raw".

       3.  If the "host" of "parsed_origin" does not match a
           "subjectAltName" in the connection's presented certificate
           (using the wildcard rules defined in [RFC2818], Section 3.1),
           skip to the next "origin_raw".

       4.  If the "port" of "parsed_origin" does not match the
           connection's local port, skip to the next "origin_raw".

       5.  Add "parsed_origin" to the Origin Set.

Authors' Addresses

   Mark Nottingham
   Akamai

   Email: mnot@mnot.net
   URI:   https://www.mnot.net/


   Erik Nygren
   Akamai

   Email: nygren@akamai.com






















Nottingham & Nygren      Expires August 6, 2017                 [Page 7]
